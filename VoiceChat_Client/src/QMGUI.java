
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ian
 */
public class QMGUI extends javax.swing.JFrame {

    /**
     * Creates new form QMGUI
     */
    RestClient r;
    public QMGUI() {
        initComponents();
        this.setVisible(true);
    }
    
    public void setUp(){
        updateTeamList();
    }
    
    public void setRC(RestClient r){
        this.r = r;
    }
    
    public void updateTeamList(){
        ArrayList<String> teams = new ArrayList<String>();
        try{
            teams = r.getTeams();
        } catch (Exception e){System.out.println("UpdateTeamList: " + e);}
        DefaultListModel<String> model = new DefaultListModel<>();
        for (String team: teams){
            model.addElement(team);
        }
        teamList.setModel(model);
    }
    
    public void updateTeamNameLabel(){
        teamNameLabel.setText(teamList.getSelectedValue());
    }
    
    public String getSelectedRound(){
        String selectedRound = String.valueOf(roundSelectorComboBox.getItemAt(roundSelectorComboBox.getSelectedIndex()));
        return selectedRound;
    }
    
    public String getSelectedRoundAnswers(){
        String selectedRound = getSelectedRound();
        String teamName = teamList.getSelectedValue();
        System.out.println("Get round " + selectedRound + " answers for team: " + teamName);
        String answers = "";
        try {
            answers = r.getSelectedRoundAnswersForTeam(selectedRound, teamName);
        } catch (Exception e) {System.out.println("Get round " + selectedRound + " answers for team: " + teamName + ": Error: " + e);}
        answersPane.setText(answers);
        
        return answers;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshAnswersButton = new javax.swing.JButton();
        refreshTeamsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamList = new javax.swing.JList<>();
        startNewRoundButton = new javax.swing.JButton();
        roundSelectorComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        answersPane = new javax.swing.JTextPane();
        scoreUpdateField = new javax.swing.JTextField();
        submitScore = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        roundScoreLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        totalScoreLabel = new javax.swing.JLabel();
        quitQuizzoMasterRole = new javax.swing.JButton();
        teamNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        refreshAnswersButton.setText("Refresh Answers");
        refreshAnswersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAnswersButtonActionPerformed(evt);
            }
        });

        refreshTeamsButton.setText("Refresh Teams");
        refreshTeamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTeamsButtonActionPerformed(evt);
            }
        });

        teamList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                teamListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(teamList);

        startNewRoundButton.setText("Start New Round");
        startNewRoundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewRoundButtonActionPerformed(evt);
            }
        });

        roundSelectorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));
        roundSelectorComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roundSelectorComboBoxItemStateChanged(evt);
            }
        });

        jScrollPane2.setEnabled(false);
        jScrollPane2.setViewportView(answersPane);

        scoreUpdateField.setText("jTextField1");

        submitScore.setText("Submit Score");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Round Score");

        roundScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roundScoreLabel.setText("jLabel2");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Total Score");

        totalScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalScoreLabel.setText("jLabel4");

        quitQuizzoMasterRole.setText("Quit Master Role");

        teamNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(refreshTeamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshAnswersButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startNewRoundButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quitQuizzoMasterRole))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roundSelectorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(teamNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submitScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scoreUpdateField)
                            .addComponent(roundScoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalScoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshTeamsButton)
                    .addComponent(refreshAnswersButton)
                    .addComponent(startNewRoundButton)
                    .addComponent(quitQuizzoMasterRole))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roundSelectorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teamNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roundScoreLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalScoreLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 286, Short.MAX_VALUE)
                                .addComponent(scoreUpdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(submitScore)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // kill the connection
        try{
            r.killPlayer();
        } catch (Exception e){System.out.println("killPlayer: " + e);}
    }//GEN-LAST:event_formWindowClosing

    private void refreshTeamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTeamsButtonActionPerformed
        updateTeamList();
    }//GEN-LAST:event_refreshTeamsButtonActionPerformed

    private void teamListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_teamListValueChanged
        // TODO add your handling code here:
        updateTeamNameLabel();
        
        //get answers for selected round
        getSelectedRoundAnswers();
        
    }//GEN-LAST:event_teamListValueChanged

    private void refreshAnswersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAnswersButtonActionPerformed
        // TODO add your handling code here:
        getSelectedRoundAnswers();
    }//GEN-LAST:event_refreshAnswersButtonActionPerformed

    private void startNewRoundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNewRoundButtonActionPerformed
        // TODO add your handling code here:
        //Create New Round
        int count = roundSelectorComboBox.getItemCount();
        int selection = roundSelectorComboBox.getSelectedIndex();
        roundSelectorComboBox.removeAllItems();
        ArrayList<Integer> range = new ArrayList<Integer>();
        for (int i=1; i<=count+1; i++) {
            range.add(i);
        }
        roundSelectorComboBox.setModel(new DefaultComboBoxModel(range.toArray()));
        roundSelectorComboBox.setSelectedIndex(selection);
    }//GEN-LAST:event_startNewRoundButtonActionPerformed

    private void roundSelectorComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roundSelectorComboBoxItemStateChanged
        // TODO add your handling code here:
        System.out.println(getSelectedRound());
        getSelectedRoundAnswers();
    }//GEN-LAST:event_roundSelectorComboBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QMGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QMGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane answersPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton quitQuizzoMasterRole;
    private javax.swing.JButton refreshAnswersButton;
    private javax.swing.JButton refreshTeamsButton;
    private javax.swing.JLabel roundScoreLabel;
    private javax.swing.JComboBox<String> roundSelectorComboBox;
    private javax.swing.JTextField scoreUpdateField;
    private javax.swing.JButton startNewRoundButton;
    private javax.swing.JButton submitScore;
    private javax.swing.JList<String> teamList;
    private javax.swing.JLabel teamNameLabel;
    private javax.swing.JLabel totalScoreLabel;
    // End of variables declaration//GEN-END:variables
}
